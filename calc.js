// Generated by CoffeeScript 1.3.3
(function() {

  window.JSUnitCalcValue = (function() {

    function JSUnitCalcValue(num, unit) {
      this.num = num;
      this.unit = unit;
    }

    JSUnitCalcValue.prototype.toJSON = function() {
      return {
        num: this.num,
        unit: this.unit
      };
    };

    return JSUnitCalcValue;

  })();

  window.JSUnitCalc = (function() {

    function JSUnitCalc() {}

    JSUnitCalc.prototype.add = function(left, right) {
      return ['+', left, right];
    };

    JSUnitCalc.prototype.subtract = function(left, right) {
      return ['-', left, right];
    };

    JSUnitCalc.prototype.multiply = function(left, right) {
      return ['*', left, right];
    };

    JSUnitCalc.prototype.divide = function(left, right) {
      return ['/', left, right];
    };

    JSUnitCalc.prototype.power = function(left, right) {
      return ['^', left, right];
    };

    JSUnitCalc.prototype.convert = function(res, unit) {
      return [res, unit];
    };

    JSUnitCalc.prototype.multiplyUnits = function(left, right) {
      return ['*u', left, right];
    };

    JSUnitCalc.prototype.divideUnits = function(left, right) {
      return ['/u', left, right];
    };

    JSUnitCalc.prototype.powerUnits = function(left, right) {
      return ['^u', left, right];
    };

    return JSUnitCalc;

  })();

  $(document).ready(function() {
    return $('#expr').keydown(function() {
      var _this = this;
      return setTimeout((function() {
        var res;
        try {
          res = JSUnitCalcParser.parse(_this.value);
          $('#result').text(JSON.stringify(res));
          return $('#error').text('');
        } catch (e) {
          $('#error').text(e.toString());
          return $('#result').text('');
        }
      }), 0);
    });
  });

}).call(this);
