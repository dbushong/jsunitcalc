// Math!
{
var calc = new JSUnitCalc;
}

start
  = _ expr:additive __ "in"i __ unit:unit { return calc.convert(expr, unit); }
  / _ expr:additive _ { return expr; }

additive
  = left:multiplicative _ "+" _ right:additive { return calc.add(left, right); }
  / left:multiplicative _ "-" _ right:additive {
      return calc.subtract(left, right);
    }
  / multiplicative

multiplicative
  = left:powered _ "*" _ right:multiplicative {
      return calc.multiply(left, right);
    }
  / left:powered _ "/" _ right:multiplicative {
      return calc.divide(left, right);
    }
  / powered

powered
  = n:primary _ exp _ pow:powered { return calc.power(n, pow); }
  / primary

exp "exponentiation"
  = "^"
  / "**"

primary
  = number_with_unit
  / "(" _ additive:additive _ ")" { return additive; }

number_with_unit
  = num:number unit:unit { return new JSUnitCalcValue(num, unit); }
  / number

number "number"
  = num:([+-]? ([0-9]+ ("." [0-9]*)? / "." [0-9]+) ( "e"i [+-]? [0-9]+)?) {
      return parseFloat(num.join(''));
    }

unit "unit"
  = "ms"
  / "kg"

_ = __*

__ "whitespace" = [' '\t\r\n]
 
